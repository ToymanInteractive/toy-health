name: "Analyze package"

on:
  pull_request:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - ".github/workflows/package_analyze.yaml"
      - "analysis_options.yaml"
      - "pubspec.yaml"
  push:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - ".github/workflows/package_analyze.yaml"
      - "analysis_options.yaml"
      - "pubspec.yaml"

jobs:
  analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Validate semantic changelog update
        if: ${{ github.event_name == 'pull_request' }}
        uses: GetStream/verify-semantic-changelog-update@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Run dependency validator
        run: |
          flutter pub global activate dependency_validator
          flutter pub global run dependency_validator:dependency_validator

      - name: Analyze project
        run: flutter analyze --no-pub .

      - name: dart-code-metrics
        uses: dart-code-checker/dart-code-metrics-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folders: "lib, test"
          check_unused_files: true
          pull_request_comment: true

      - name: Verify formatting
        run: flutter format --set-exit-if-changed .

  testing:
    needs: analysis
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Test results
          path: reports/tests.json
          reporter: dart-json
          token: ${{ secrets.GITHUB_TOKEN }}
