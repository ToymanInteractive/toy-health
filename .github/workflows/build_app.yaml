name: "Build application"

on:
  pull_request:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - ".github/workflows/build_app.yaml"
      - "analysis_options.yaml"
      - "pubspec.yaml"
  push:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - ".github/workflows/build_app.yaml"
      - "analysis_options.yaml"
      - "pubspec.yaml"

jobs:
  analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Validate semantic changelog update
        if: ${{ github.event_name == 'pull_request' }}
        uses: GetStream/verify-semantic-changelog-update@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run dependency validator
        run: |
          flutter pub global activate dependency_validator
          flutter pub global run dependency_validator:dependency_validator

      - name: Analyze project
        run: flutter analyze --no-pub .

      - name: dart-code-metrics
        uses: dart-code-checker/dart-code-metrics-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folders: "lib, test"
          pull_request_comment: true

      - name: Verify formatting
        run: flutter format --set-exit-if-changed .

  testing:
    needs: analysis
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Install lcov
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          flutter test --exclude-tags=golden --reporter=expanded --coverage
          flutter pub run tool/uncovered_flutter_coverage.dart
          mv coverage/lcov.info coverage/lcov.base.info
          flutter test --coverage --merge-coverage test/fake_test.dart
          bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Tests result
          path: reports/tests.json
          reporter: dart-json
          token: ${{ secrets.GITHUB_TOKEN }}

  golden_testing:
    needs: analysis
    runs-on: macos-11

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test --tags=golden --reporter=expanded

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Golden Tests result
          path: reports/tests.json
          reporter: dart-json
          token: ${{ secrets.GITHUB_TOKEN }}

  build-apk:
    name: "build apk"
    needs: [testing, golden_testing]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build apk
        run: flutter build apk

      - name: Deploy to Firebase
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          curl -sL https://firebase.tools | bash
          sed -n "/^## Unreleased$/,/^## /p" CHANGELOG.md > UNRELEASED.MD
          firebase appdistribution:distribute --app ${{ secrets.FIREBASE_ANDROID_ID }} --release-notes-file UNRELEASED.MD --groups flutter-testers --token ${{ secrets.FIREBASE_TOKEN }} ./build/app/outputs/flutter-apk/app-release.apk

  build-web:
    name: "build web"
    needs: [testing, golden_testing]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web

      - name: Deploy to Firebase
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          curl -sL https://firebase.tools | bash
          firebase deploy --only hosting:health-diary --project toy-health --token ${{ secrets.FIREBASE_TOKEN }}
